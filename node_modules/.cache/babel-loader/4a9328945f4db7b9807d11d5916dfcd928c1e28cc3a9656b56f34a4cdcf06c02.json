{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'VersionUpgrade',\n  data() {\n    return {\n      upgradeType: 'normal',\n      workType: 'type1',\n      selectedIpList: '',\n      neIp: [],\n      neVersionPath: '',\n      consoleOutput: '',\n      ipLists: {\n        CES: ['172.32.88.3', '172.32.88.20', '172.32.88.23', '172.32.88.25', '172.32.88.27', '172.32.88.50', '172.32.88.80', '172.32.88.83']\n      }\n    };\n  },\n  computed: {\n    filteredIpList() {\n      return this.ipLists[this.selectedIpList] || [];\n    }\n  },\n  methods: {\n    openConfig() {\n      this.$router.push('/config');\n    },\n    startUpgrade() {\n      this.log('开始更新版本...');\n      this.log(`Upgrade Type: ${this.upgradeType}`);\n      this.log(`Work Type: ${this.workType}`);\n      this.log(`Selected IPs: ${this.neIp.join(', ')}`);\n      this.log(`NE Version Path: ${this.neVersionPath}`);\n      this.log('更新过程模拟中...');\n      setTimeout(() => {\n        this.log('更新完成！');\n      }, 3000);\n    },\n    log(message) {\n      const timestamp = new Date().toLocaleTimeString();\n      this.consoleOutput += `[${timestamp}] ${message}\\n`;\n      this.$nextTick(() => {\n        const outputArea = this.$el.querySelector('.output-area');\n        outputArea.scrollTop = outputArea.scrollHeight;\n      });\n    },\n    loadConfig() {\n      const savedConfig = localStorage.getItem('upgradeConfig');\n      if (savedConfig) {\n        const config = JSON.parse(savedConfig);\n        Object.assign(this, config);\n      }\n    }\n  },\n  mounted() {\n    this.loadConfig();\n  }\n};","map":{"version":3,"names":["name","data","upgradeType","workType","selectedIpList","neIp","neVersionPath","consoleOutput","ipLists","CES","computed","filteredIpList","methods","openConfig","$router","push","startUpgrade","log","join","setTimeout","message","timestamp","Date","toLocaleTimeString","$nextTick","outputArea","$el","querySelector","scrollTop","scrollHeight","loadConfig","savedConfig","localStorage","getItem","config","JSON","parse","Object","assign","mounted"],"sources":["src/views/VersionUpgrade.vue"],"sourcesContent":["<template>\r\n  <div class=\"version-upgrade\">\r\n    <header>\r\n      <h2>版本更新</h2>\r\n      <button @click=\"openConfig\" class=\"config-button\">\r\n        <i class=\"fas fa-cog\"></i> 配置\r\n      </button>\r\n    </header>\r\n    <div class=\"upgrade-container\">\r\n      <div class=\"input-section\">\r\n        <div class=\"input-group\">\r\n          <label for=\"upgradeType\">Upgrade Type:</label>\r\n          <select id=\"upgradeType\" v-model=\"upgradeType\">\r\n            <option value=\"normal\">Normal</option>\r\n            <option value=\"force\">Force</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"workType\">Work Type:</label>\r\n          <select id=\"workType\" v-model=\"workType\">\r\n            <option value=\"type1\">Type 1</option>\r\n            <option value=\"type2\">Type 2</option>\r\n            <option value=\"type3\">Type 3</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"neIp\">NE IP:</label>\r\n          <div class=\"ne-ip-selector\">\r\n            <select v-model=\"selectedIpList\">\r\n              <option value=\"\">Select a iplist...</option>\r\n              <option value=\"CES\">CES</option>\r\n            </select>\r\n            <select v-model=\"neIp\" multiple>\r\n              <option v-for=\"ip in filteredIpList\" :key=\"ip\" :value=\"ip\">{{ ip }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"neVersionPath\">NE Version Path:</label>\r\n          <input type=\"text\" id=\"neVersionPath\" v-model=\"neVersionPath\">\r\n        </div>\r\n        <button @click=\"startUpgrade\" class=\"upgrade-button\">开始更新</button>\r\n      </div>\r\n      <div class=\"console-output\">\r\n        <h3>Console Output</h3>\r\n        <div class=\"output-area\">\r\n          <pre>{{ consoleOutput }}</pre>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'VersionUpgrade',\r\n  data() {\r\n    return {\r\n      upgradeType: 'normal',\r\n      workType: 'type1',\r\n      selectedIpList: '',\r\n      neIp: [],\r\n      neVersionPath: '',\r\n      consoleOutput: '',\r\n      ipLists: {\r\n        CES: ['172.32.88.3', '172.32.88.20', '172.32.88.23', '172.32.88.25',\r\n              '172.32.88.27', '172.32.88.50', '172.32.88.80', '172.32.88.83']\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    filteredIpList() {\r\n      return this.ipLists[this.selectedIpList] || [];\r\n    }\r\n  },\r\n  methods: {\r\n    openConfig() {\r\n      this.$router.push('/config');\r\n    },\r\n    startUpgrade() {\r\n      this.log('开始更新版本...');\r\n      this.log(`Upgrade Type: ${this.upgradeType}`);\r\n      this.log(`Work Type: ${this.workType}`);\r\n      this.log(`Selected IPs: ${this.neIp.join(', ')}`);\r\n      this.log(`NE Version Path: ${this.neVersionPath}`);\r\n      this.log('更新过程模拟中...');\r\n      setTimeout(() => {\r\n        this.log('更新完成！');\r\n      }, 3000);\r\n    },\r\n    log(message) {\r\n      const timestamp = new Date().toLocaleTimeString();\r\n      this.consoleOutput += `[${timestamp}] ${message}\\n`;\r\n      this.$nextTick(() => {\r\n        const outputArea = this.$el.querySelector('.output-area');\r\n        outputArea.scrollTop = outputArea.scrollHeight;\r\n      });\r\n    },\r\n    loadConfig() {\r\n      const savedConfig = localStorage.getItem('upgradeConfig');\r\n      if (savedConfig) {\r\n        const config = JSON.parse(savedConfig);\r\n        Object.assign(this, config);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadConfig();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.version-upgrade {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nheader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.config-button {\r\n  background-color: #f39c12;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.upgrade-container {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.input-section, .console-output {\r\n  flex: 1;\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput, select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.ne-ip-selector {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.ne-ip-selector select {\r\n  flex: 1;\r\n}\r\n\r\nselect[multiple] {\r\n  height: 150px;\r\n}\r\n\r\n.upgrade-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n.output-area {\r\n  height: 300px;\r\n  overflow-y: auto;\r\n  background-color: #000;\r\n  color: #00ff00;\r\n  padding: 10px;\r\n  font-family: monospace;\r\n  border-radius: 4px;\r\n}\r\n\r\npre {\r\n  margin: 0;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n}\r\n</style>"],"mappings":";AAsDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;MACAC,cAAA;MACAC,IAAA;MACAC,aAAA;MACAC,aAAA;MACAC,OAAA;QACAC,GAAA,kEACA;MACA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,YAAAH,OAAA,MAAAJ,cAAA;IACA;EACA;EACAQ,OAAA;IACAC,WAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,aAAA;MACA,KAAAC,GAAA;MACA,KAAAA,GAAA,uBAAAf,WAAA;MACA,KAAAe,GAAA,oBAAAd,QAAA;MACA,KAAAc,GAAA,uBAAAZ,IAAA,CAAAa,IAAA;MACA,KAAAD,GAAA,0BAAAX,aAAA;MACA,KAAAW,GAAA;MACAE,UAAA;QACA,KAAAF,GAAA;MACA;IACA;IACAA,IAAAG,OAAA;MACA,MAAAC,SAAA,OAAAC,IAAA,GAAAC,kBAAA;MACA,KAAAhB,aAAA,QAAAc,SAAA,KAAAD,OAAA;MACA,KAAAI,SAAA;QACA,MAAAC,UAAA,QAAAC,GAAA,CAAAC,aAAA;QACAF,UAAA,CAAAG,SAAA,GAAAH,UAAA,CAAAI,YAAA;MACA;IACA;IACAC,WAAA;MACA,MAAAC,WAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,IAAAF,WAAA;QACA,MAAAG,MAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAL,WAAA;QACAM,MAAA,CAAAC,MAAA,OAAAJ,MAAA;MACA;IACA;EACA;EACAK,QAAA;IACA,KAAAT,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}